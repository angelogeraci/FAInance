generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id           String        @id @default(cuid())
  name         String        @unique
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  categories   Category[]
  costs        Cost[]
  revenues     Revenue[]
  transactions Transaction[]
  users        User[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  companyId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      UserRole @default(USER)
  company   Company? @relation(fields: [companyId], references: [id])
}

model Category {
  id            String        @id @default(cuid())
  name          String
  color         String
  parentId      String?
  companyId     String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  company       Company       @relation(fields: [companyId], references: [id])
  parent        Category?     @relation("CategoryToSub", fields: [parentId], references: [id])
  subcategories Category[]    @relation("CategoryToSub")
  costs         Cost[]
  revenues      Revenue[]
  transactions  Transaction[]
}

model Transaction {
  id          String   @id @default(cuid())
  label       String
  description String?
  amount      Float
  date        DateTime
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?
  company     Company  @relation(fields: [companyId], references: [id])
  companyId   String
  fournisseur String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Cost {
  id          String     @id @default(cuid())
  label       String
  amount      Float
  isRecurring Boolean
  startDate   DateTime?
  endDate     DateTime?
  frequency   Frequency?
  categoryId  String?
  companyId   String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  category    Category?  @relation(fields: [categoryId], references: [id])
  company     Company    @relation(fields: [companyId], references: [id])
}

model Revenue {
  id          String     @id @default(cuid())
  label       String
  amount      Float
  isRecurring Boolean
  startDate   DateTime?
  endDate     DateTime?
  frequency   Frequency?
  categoryId  String?
  companyId   String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  category    Category?  @relation(fields: [categoryId], references: [id])
  company     Company    @relation(fields: [companyId], references: [id])
}

enum Frequency {
  MONTHLY
  ANNUALLY
  WEEKLY
  DAILY
}

enum UserRole {
  SUPERADMIN
  ADMIN
  USER
}
